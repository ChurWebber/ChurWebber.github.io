<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on ChurWebber</title>
    <link>https://churwebber.github.io/post/</link>
    <description>Recent content in Posts on ChurWebber</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 26 Dec 2018 16:03:11 +0000</lastBuildDate>
    
	<atom:link href="https://churwebber.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>简单工厂模式-Simple Factory Pattern</title>
      <link>https://churwebber.github.io/post/simple-factory-pattern/</link>
      <pubDate>Wed, 26 Dec 2018 16:03:11 +0000</pubDate>
      
      <guid>https://churwebber.github.io/post/simple-factory-pattern/</guid>
      <description>&lt;p&gt;工厂模式是最常用的一类创建型设计模式，通常我们所说的工厂模式是指&lt;strong&gt;工厂方法模式&lt;/strong&gt;，它也是使用频率最高的工厂模式。本章将要学习的&lt;strong&gt;简单工厂模式&lt;/strong&gt;是工厂方法模式的“小弟”，它不属于GoF 23种设计模式，但在软件开发中应用也较为频繁，通常将它作为学习其他工厂模式的入门。此外，工厂方法模式还有一位“大哥”——&lt;strong&gt;抽象工厂模式&lt;/strong&gt;。这三种工厂模式各具特色，难度也逐个加大，在软件开发中它们都得到了广泛的应用，成为面向对象软件中常用的创建对象的工具。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>PSR规范 PSR-2 编码风格规范</title>
      <link>https://churwebber.github.io/post/psr-2/</link>
      <pubDate>Mon, 30 Jul 2018 15:03:11 +0000</pubDate>
      
      <guid>https://churwebber.github.io/post/psr-2/</guid>
      <description>&lt;h1 id=&#34;编码风格指南&#34;&gt;编码风格指南&lt;/h1&gt;

&lt;p&gt;本篇规范是 [PSR-1][] 基本代码规范的继承与扩展。&lt;/p&gt;

&lt;p&gt;本规范希望通过制定一系列规范化PHP代码的规则，以减少在浏览不同作者的代码时，因代码风格的不同而造成不便。&lt;/p&gt;

&lt;p&gt;当多名程序员在多个项目中合作时，就需要一个共同的编码规范，&lt;/p&gt;

&lt;p&gt;而本文中的风格规范源自于多个不同项目代码风格的共同特性，&lt;/p&gt;

&lt;p&gt;因此，本规范的价值在于我们都遵循这个编码风格，而不是在于它本身。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>PSR规范 PSR-1 基础编码规范</title>
      <link>https://churwebber.github.io/post/psr-1/</link>
      <pubDate>Mon, 23 Jul 2018 15:03:11 +0000</pubDate>
      
      <guid>https://churwebber.github.io/post/psr-1/</guid>
      <description>&lt;h1 id=&#34;基本代码规范&#34;&gt;基本代码规范&lt;/h1&gt;

&lt;p&gt;本篇规范制定了代码基本元素的相关标准，以确保共享的PHP代码间具有较高程度的技术互通性。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>高性能数据库设计原则</title>
      <link>https://churwebber.github.io/post/high-performance-database-design-principles/</link>
      <pubDate>Thu, 19 Jul 2018 15:03:11 +0000</pubDate>
      
      <guid>https://churwebber.github.io/post/high-performance-database-design-principles/</guid>
      <description>&lt;h1 id=&#34;一-高性能数据库设计原则&#34;&gt;一. 高性能数据库设计原则&lt;/h1&gt;

&lt;h2 id=&#34;1-数据库逻辑设计的规范化&#34;&gt;1. 数据库逻辑设计的规范化&lt;/h2&gt;

&lt;p&gt;数据库逻辑设计的规范化就是我们一般所说的范式&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;第一范式：没有重复的组或多值的列，这是数据库设计的最低要求&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;第二范式：每个关键字段必须依赖于主关键字，不能依赖于一个组合式主关键字的某些组成部分。消除部分依赖，大部分情况下，数据库设计都应达到第二范式&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;第三范式：一个非关键字段不能依赖于另一个非关键字段。消除传递依赖，达到第三范式应是系统中大部分表的要求，除非一些特殊作用的表&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>